{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\paper-dashboard-react\\\\src\\\\components\\\\calendar\\\\CalendarNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction CalendarNote() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // You can fetch events from an API or another data source here.\n    // For this example, we'll use a sample event.\n    const sampleEvent = {\n      start: new Date(2023, 10, 1, 10, 0),\n      end: new Date(2023, 10, 1, 12, 0),\n      title: \"Corte de pelo\",\n      notes: \"Discuss project progress.\"\n    };\n    const sampleEvents = [{\n      start: new Date(2023, 10, 1, 10, 0),\n      end: new Date(2023, 10, 1, 12, 0),\n      title: \"Corte de pelo\",\n      notes: \"Discuss project progress.\"\n    }, {\n      start: new Date(2023, 10, 2, 14, 0),\n      end: new Date(2023, 10, 2, 15, 30),\n      title: \"Meeting 2\",\n      notes: \"Team brainstorming session.\"\n    }\n    // Add more events here\n    ];\n\n    setEvents([sampleEvent]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectEvent: event => {\n        // You can display the notes when an event is clicked here.\n        alert(\"Notes: \".concat(event.notes));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarNote, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = CalendarNote;\nexport default CalendarNote;\nvar _c;\n$RefreshReg$(_c, \"CalendarNote\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","CalendarNote","_s","events","setEvents","sampleEvent","start","Date","end","title","notes","sampleEvents","children","startAccessor","endAccessor","style","height","onSelectEvent","event","alert","concat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/paper-dashboard-react/src/components/calendar/CalendarNote.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nfunction CalendarNote() {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // You can fetch events from an API or another data source here.\r\n    // For this example, we'll use a sample event.\r\n    const sampleEvent = {\r\n      start: new Date(2023, 10, 1, 10, 0),\r\n      end: new Date(2023, 10, 1, 12, 0),\r\n      title: \"Corte de pelo\",\r\n      notes: \"Discuss project progress.\",\r\n    };\r\n\r\n    const sampleEvents = [\r\n      {\r\n        start: new Date(2023, 10, 1, 10, 0),\r\n        end: new Date(2023, 10, 1, 12, 0),\r\n        title: \"Corte de pelo\",\r\n        notes: \"Discuss project progress.\",\r\n      },\r\n      {\r\n        start: new Date(2023, 10, 2, 14, 0),\r\n        end: new Date(2023, 10, 2, 15, 30),\r\n        title: \"Meeting 2\",\r\n        notes: \"Team brainstorming session.\",\r\n      },\r\n      // Add more events here\r\n    ];\r\n\r\n    setEvents([sampleEvent]);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectEvent={(event) => {\r\n          // You can display the notes when an event is clicked here.\r\n          alert(`Notes: ${event.notes}`);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default CalendarNote;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AACzC,SAASI,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMW,WAAW,GAAG;MAClBC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACnCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACjCE,KAAK,EAAE,eAAe;MACtBC,KAAK,EAAE;IACT,CAAC;IAED,MAAMC,YAAY,GAAG,CACnB;MACEL,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACnCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACjCE,KAAK,EAAE,eAAe;MACtBC,KAAK,EAAE;IACT,CAAC,EACD;MACEJ,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACnCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAClCE,KAAK,EAAE,WAAW;MAClBC,KAAK,EAAE;IACT;IACA;IAAA,CACD;;IAEDN,SAAS,CAAC,CAACC,WAAW,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACJ,QAAQ;MACPK,SAAS,EAAEA,SAAU;MACrBG,MAAM,EAAEA,MAAO;MACfU,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAE;MACvBC,aAAa,EAAGC,KAAK,IAAK;QACxB;QACAC,KAAK,WAAAC,MAAA,CAAWF,KAAK,CAACR,KAAK,CAAE,CAAC;MAChC;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtB,EAAA,CA/CQD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAgDrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\paper-dashboard-react\\\\src\\\\components\\\\calendar\\\\CalendarNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction CalendarNote() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [date, setDate] = useState(null);\n  const [year, setYear] = useState(null);\n  const [month, setMonth] = useState(null);\n  const [day, setDay] = useState(null);\n  const [hours, setHours] = useState(null);\n  const [minutes, setMinutes] = useState(null);\n  useEffect(() => {\n    // You can fetch events from an API or another data source here.\n    axios.get(\"https://sea-turtle-app-ocnii.ondigitalocean.app/appointments\").then(response => {\n      dateObject = new Date(response.data[0].appointmentDateTime);\n      const year = dateObject.getFullYear();\n    });\n\n    // For this example, we'll use a sample event.\n\n    const sampleEvent = {\n      start: new Date(2023, 10, 1, 10, 0),\n      end: new Date(2023, 10, 1, 12, 0),\n      title: \"Corte de pelo\",\n      notes: \"Discuss project progress.\"\n    };\n    const sampleEvents = [{\n      start: new Date(2023, 10, 8, 10, 0),\n      end: new Date(2023, 10, 8, 12, 0),\n      title: \"Corte de pelo\",\n      notes: \"Discuss project progress.\"\n    }, {\n      start: new Date(2023, 10, 2, 14, 0),\n      end: new Date(2023, 10, 2, 15, 30),\n      title: \"Meeting 2\",\n      notes: \"Team brainstorming session.\"\n    }\n    // Add more events here\n    ];\n\n    setEvents([sampleEvents]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectEvent: event => {\n        // You can display the notes when an event is clicked here.\n        alert(\"Notes: \".concat(event.notes));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarNote, \"UM7GsYrOx0rrDCi9Yl1EsF/Dg8A=\");\n_c = CalendarNote;\nexport default CalendarNote;\nvar _c;\n$RefreshReg$(_c, \"CalendarNote\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","axios","jsxDEV","_jsxDEV","localizer","CalendarNote","_s","events","setEvents","date","setDate","year","setYear","month","setMonth","day","setDay","hours","setHours","minutes","setMinutes","get","then","response","dateObject","Date","data","appointmentDateTime","getFullYear","sampleEvent","start","end","title","notes","sampleEvents","children","startAccessor","endAccessor","style","height","onSelectEvent","event","alert","concat","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/paper-dashboard-react/src/components/calendar/CalendarNote.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport axios from \"axios\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nfunction CalendarNote() {\r\n  const [events, setEvents] = useState([]);\r\n  const [date, setDate] = useState(null);\r\n  const [year, setYear] = useState(null);\r\n  const [month, setMonth] = useState(null);\r\n  const [day, setDay] = useState(null);\r\n  const [hours, setHours] = useState(null);\r\n  const [minutes, setMinutes] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // You can fetch events from an API or another data source here.\r\n    axios\r\n      .get(\"https://sea-turtle-app-ocnii.ondigitalocean.app/appointments\")\r\n      .then((response) => {\r\n        dateObject = new Date(response.data[0].appointmentDateTime);\r\n        const year = dateObject.getFullYear();\r\n      });\r\n\r\n    // For this example, we'll use a sample event.\r\n\r\n    const sampleEvent = {\r\n      start: new Date(2023, 10, 1, 10, 0),\r\n      end: new Date(2023, 10, 1, 12, 0),\r\n      title: \"Corte de pelo\",\r\n      notes: \"Discuss project progress.\",\r\n    };\r\n\r\n    const sampleEvents = [\r\n      {\r\n        start: new Date(2023, 10, 8, 10, 0),\r\n        end: new Date(2023, 10, 8, 12, 0),\r\n        title: \"Corte de pelo\",\r\n        notes: \"Discuss project progress.\",\r\n      },\r\n      {\r\n        start: new Date(2023, 10, 2, 14, 0),\r\n        end: new Date(2023, 10, 2, 15, 30),\r\n        title: \"Meeting 2\",\r\n        notes: \"Team brainstorming session.\",\r\n      },\r\n      // Add more events here\r\n    ];\r\n\r\n    setEvents([sampleEvents]);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectEvent={(event) => {\r\n          // You can display the notes when an event is clicked here.\r\n          alert(`Notes: ${event.notes}`);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default CalendarNote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}